{"version":3,"sources":["SideNav.js","Dash.js","App.js","reportWebVitals.js","index.js"],"names":["SideNav","className","Dash","newData","useState","data","copy","setCopy","handleChange","e","target","id","sort","a","b","cost","console","log","reverse","filter","item","gender","size","product","onClick","type","value","name","onChange","document","querySelectorAll","forEach","rdbtn","checked","map","src","imageUrl","App","style","background","display","height","alt","placeholder","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a14ebfeb.chunk.js","sourcesContent":["\nconst SideNav=()=>{\n    return(\n        <div className=\"container sidenav\">\n           \n        </div>\n    )\n}\nexport default SideNav;","\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport data from \"./data.json\";\n\n\n\nconst Dash=()=>{\nconst[copy,setCopy]= useState(data);\n    \n    let newData;\n    const handleChange= (e) =>{\n           \n        switch(e.target.id){\n            case 'lh':\n                { newData = [...data].sort(function(a,b){\n                    return a.cost - b.cost\n                })\n                console.log(newData)\n                return (\n                    setCopy(newData)    \n                    )\n                } \n            \n            case 'hl':\n                { newData = [...data].sort(function(a,b){\n                    return (a.cost - b.cost)\n                }).reverse()\n                console.log(newData)\n                return (\n                    setCopy(newData)\n                );\n            }\n            case 'male':\n                { newData = data.filter((item)=>item.gender!=='female')\n                console.log(newData)\n                return (\n                    setCopy(newData)    \n                    )\n                } \n                case 'female':\n                    { newData = data.filter((item)=>item.gender!=='male')\n                    console.log(newData)\n                    return (\n                        setCopy(newData)    \n                        )\n                    } \n                    case 'l':\n                    { newData = data.filter((item)=>item.size==='L')\n                    console.log(newData)\n                    return (\n                        setCopy(newData)    \n                        )\n                    } \n                    case 'xl':\n                    { newData = data.filter((item)=>item.size==='XL')\n                    console.log(newData)\n                    return (\n                        setCopy(newData)    \n                        )\n                    } \n                    case 'xxl':\n                        { newData = data.filter((item)=>item.size==='XXL')\n                        console.log(newData)\n                        return (\n                            setCopy(newData)    \n                            )\n                        } \n                        case 'shirt':\n                        { newData = data.filter((item)=>item.product==='shirt')\n                        console.log(newData)\n                        return (\n                            setCopy(newData)    \n                            )\n                        } \n                        case 'shorts':\n                        { newData = data.filter((item)=>item.product==='shorts')\n                        console.log(newData)\n                        return (\n                            setCopy(newData)    \n                            )\n                        } \n                        case 'dress':\n                            { newData = data.filter((item)=>item.product==='dress')\n                            console.log(newData)\n                            return (\n                                setCopy(newData)    \n                                )\n                            } \n                            case 'tshirt':\n                                { newData = data.filter((item)=>item.product==='tshirt')\n                                console.log(newData)\n                                return (\n                                    setCopy(newData)    \n                                    )\n                                } \n                                case 'reset':\n                                    { \n                                    return (\n                                        setCopy(data)    \n                                        )\n                                    } \n    }\n    \n    }\n    const handleClear=()=>{\n        const rdbtn = document.querySelectorAll(\"input[type='radio'],input[type='checkbox']\");\n    rdbtn.forEach(rdbtn =>{\n        if(rdbtn.checked===true)\n        rdbtn.checked= false;\n    })\n    }\n    \n   \n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        console.log(e.target.value)\n                    switch(e.target.value){\n                        case 'lh':\n                            { newData = [...data].sort(function(a,b){\n                                return a.cost - b.cost\n                            })\n                            console.log(newData)\n                            return (\n                                setCopy(newData)    \n                                )\n                            } \n                        \n                        case 'hl':\n                            { newData = [...data].sort(function(a,b){\n                                return (a.cost - b.cost)\n                            }).reverse()\n                            console.log(newData)\n                            return (\n                                setCopy(newData)\n                            );\n                        }       \n\n                }\n                              \n    }\n\n\n\n\n    return(\n        \n        \n        <div className=\"  dashboard\">\n       \n            <button id=\"hl\" onClick={handleChange}>Price: High-Low</button>\n            <button id=\"lh\" onClick={handleChange}>Price: Low-High</button>\n           <button id=\"male\" onClick={handleChange}>Male</button>\n           <button id=\"female\" onClick={handleChange}>Female</button>\n           \n           <div>SIZE::\n           <button id=\"l\" onClick={handleChange}>L</button>\n           <button id=\"xl\" onClick={handleChange}>XL</button>\n           <button id=\"xxl\" onClick={handleChange}>XXL</button>\n           \n           <br/>  \n\n        </div>\n        <hr/>\n        <div>\n        <form >\n           <br/>\n            <label><input type=\"radio\" value =\"male\" id=\"male\" name=\"gender\"  onChange={handleChange}/> MALE </label>\n            <label><input type=\"radio\" value =\"female\" id=\"female\" name=\"gender\" onChange={handleChange}  / > FEMALE </label>\n            <button type=\"submit\">Submit</button>    \n            <button id=\"clear\" onClick={handleClear}>clear</button>\n           </form>\n           <form >\n           <label><input type=\"checkbox\" name=\"dress\" id=\"dress\" onChange={handleChange}/>DRESS </label>\n           <label><input type=\"checkbox\" name=\"shirt\" id=\"shirt\" onChange={handleChange} />SHIRT </label>\n           <label><input type=\"checkbox\" name=\"short\" id=\"shorts\" onChange={handleChange}/>SHORTS </label>\n           <label><input type=\"checkbox\" name=\"tshirt\" id=\"tshirt\" onChange={handleChange}/>TSHIRT </label>\n           </form>\n           <hr/>\n        </div>\n        <button id=\"reset\" onClick={handleChange}>reset</button>\n        \n\n        <div className=\" container dashboard items\">\n            {(copy.map(item=>{\n                return (\n                        <div className=\"card\">\n                        <img src={item.imageUrl}></img>\n                        <p>{item.product} <span>{item.cost}</span></p>\n                        </div>\n                    )        \n                }))\n                }\n        </div>  \n        </div>\n        \n    )\n}\nexport default Dash;","import Sidenav from \"./SideNav\";\nimport Dash from \"./Dash\";\n\n\nfunction App() {\n  return (\n    \n      <div className=\"App\">\n      <nav style={{background:\"blue\", display:\"flex\"}}>\n      <img src='flipkart.png' height=\"25\" alt=\"\"></img>\n      <input type=\"text\" placeholder=\"Search\"></input>\n      <button >Search</button>\n      <ul style={{display:\"flex\"}}>\n        <li className=\"nav-list\">\n          <a href=\"#\">Login</a>\n        </li>\n        <li className=\"nav-list\">\n          <a href=\"#\">More</a>\n        </li>\n        <li className=\"nav-list\">\n          <a href=\"#\">\n            Cart\n          </a>\n        </li>\n      </ul>\n      </nav>\n      \n        <Sidenav/>\n       <Dash/>\n\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}